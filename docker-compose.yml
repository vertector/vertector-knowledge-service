services:
  neo4j:
    image: neo4j:2025.09.0-community-bullseye
    container_name: neo4j-graphrag
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      # Authentication
      - NEO4J_AUTH=neo4j/graphrag_secure_password_2025

      # Memory configuration
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=2G
      - NEO4J_server_memory_pagecache_size=1G

      # Plugins (APOC and Graph Data Science)
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*

      # Performance
      - NEO4J_server_db_query__cache__size=256

      # Accept license for GDS
      - NEO4J_gds_enterprise_license__file=-

    volumes:
      # Persistent data storage
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/import:/var/lib/neo4j/import
      - ./neo4j/plugins:/plugins

      # Schema files for easy import
      - ./schema:/schema:ro

    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

    restart: unless-stopped

    networks:
      - graphrag-network

    labels:
      - "com.graphrag.service=neo4j"
      - "com.graphrag.description=Neo4j Graph Database for Academic GraphRAG System"

  # GraphRAG Note Service
  # Automatically consumes events from NATS (handled by vertector-nats-jetstream)
  note-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: graphrag-note-service
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      # Neo4j Configuration
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=graphrag_secure_password_2025
      - NEO4J_DATABASE=neo4j

      # NATS Configuration (connects to NATS from vertector-nats-jetstream on host)
      - NATS_SERVERS=["nats://host.docker.internal:4222"]
      - NATS_STREAM_NAME=ACADEMIC_EVENTS
      - NATS_DURABLE_NAME=graphrag-note-service-consumer-v2

      # Embedding Configuration
      - EMBEDDING_MODEL_NAME=Qwen/Qwen3-Embedding-0.6B
      - EMBEDDING_DEVICE=cpu
      - EMBEDDING_CACHE_FOLDER=/app/.cache/huggingface
      - EMBEDDING_NORMALIZE_EMBEDDINGS=true
      - EMBEDDING_BATCH_SIZE=32
      - EMBEDDING_DIMENSIONS=1024

      # Application Configuration
      - LOG_LEVEL=INFO
      - TOKENIZERS_PARALLELISM=false
    volumes:
      - huggingface_cache:/app/.cache/huggingface
      - ./logs:/app/logs
    networks:
      - graphrag-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import sys; sys.exit(0)'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "com.graphrag.service=note-service"
      - "com.graphrag.description=GraphRAG Note Service with Auto Embeddings"

volumes:
  huggingface_cache:
    driver: local

networks:
  graphrag-network:
    driver: bridge
    name: graphrag-network
