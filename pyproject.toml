[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "note-service"
version = "0.1.0"
description = "Production-ready note-taking service with dynamic GraphRAG retrieval"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Vertector"}
]
keywords = ["note-taking", "graphrag", "neo4j", "retrieval", "llm", "rag"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "neo4j>=5.17.0,<6.0.0",
    "neo4j-graphrag==1.10.0",
    "pydantic==2.12.0",
    "pydantic-settings==2.11.0",
    "sentence-transformers==5.1.1",
    "transformers==4.57.1",
    "torch>=2.2.0",
    "numpy>=2.0.0,<3.0.0",
    "langchain-google-genai>=3.0.0",
    "python-dotenv==1.1.1",
    "tenacity==9.1.2",
    "typing-extensions>=4.14.1",
    "nats-py>=2.9.0",
    "prometheus-client>=0.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.2",
    "pytest-asyncio==0.24.0",
    "black==24.10.0",
    "ruff==0.8.4",
    "mypy==1.13.0",
]

[project.scripts]
note-service-example = "examples.retrieval_example:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
